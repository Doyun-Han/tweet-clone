{"ast":null,"code":"var _jsxFileName = \"/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/components/TweetCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TweetCard = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(({\n  tweet,\n  owner,\n  onDelete,\n  onUpdate,\n  onUsernameClick\n}) => {\n  _s();\n  const {\n    id,\n    username,\n    name,\n    url,\n    text,\n    createdAt\n  } = tweet;\n  const [editing, setEditing] = useState(false);\n  const onClose = () => setEditing(false);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tweet\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"tweet-container\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        url: url,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-username\",\n          onClick: () => onUsernameClick(tweet),\n          children: [\"@\", username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tweet-date\",\n          children: [\" \\xB7 \", parseDate(createdAt)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), editing && /*#__PURE__*/_jsxDEV(EditTweetForm, {\n          tweet: tweet,\n          onUpdate: onUpdate,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), owner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet-action\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet-action-btn\",\n        onClick: () => onDelete(id),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tweet-action-btn\",\n        onClick: () => setEditing(true),\n        children: \"\\u270E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n}, \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\")), \"8NtxifNHNH77GP4fOyN5Q3EVoDA=\");\n_c2 = TweetCard;\nexport default TweetCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"TweetCard$memo\");\n$RefreshReg$(_c2, \"TweetCard\");","map":{"version":3,"names":["React","memo","useState","parseDate","Avatar","EditTweetForm","jsxDEV","_jsxDEV","TweetCard","_s","_c","tweet","owner","onDelete","onUpdate","onUsernameClick","id","username","name","url","text","createdAt","editing","setEditing","onClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/components/TweetCard.jsx"],"sourcesContent":["import React, { memo, useState } from 'react';\nimport parseDate from '../util/date';\nimport Avatar from './Avatar';\nimport EditTweetForm from './EditTweetForm';\n\nconst TweetCard = memo(\n  ({ tweet, owner, onDelete, onUpdate, onUsernameClick }) => {\n    const { id, username, name, url, text, createdAt } = tweet;\n    const [editing, setEditing] = useState(false);\n    const onClose = () => setEditing(false);\n\n    return (\n      <li className='tweet'>\n        <section className='tweet-container'>\n          <Avatar url={url} name={name} />\n          <div className='tweet-body'>\n            <span className='tweet-name'>{name}</span>\n            <span\n              className='tweet-username'\n              onClick={() => onUsernameClick(tweet)}\n            >\n              @{username}\n            </span>\n            <span className='tweet-date'> · {parseDate(createdAt)}</span>\n            <p>{text}</p>\n            {editing && (\n              <EditTweetForm\n                tweet={tweet}\n                onUpdate={onUpdate}\n                onClose={onClose}\n              />\n            )}\n          </div>\n        </section>\n        {owner && (\n          <div className='tweet-action'>\n            <button className='tweet-action-btn' onClick={() => onDelete(id)}>\n              x\n            </button>\n            <button\n              className='tweet-action-btn'\n              onClick={() => setEditing(true)}\n            >\n              ✎\n            </button>\n          </div>\n        )}\n      </li>\n    );\n  }\n);\nexport default TweetCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import socket from 'socket.io-client';\nexport default class Socket {\n  constructor(baseURL, getAccessToken) {\n    this.io = socket(baseURL, {\n      auth: cb => cb({\n        token: getAccessToken()\n      })\n    });\n    this.io.on('connect_error', error => {\n      console.log('socket error', error.message);\n    });\n  }\n  onSync(event, callback) {\n    if (!this.io.connected) {\n      this.io.connect();\n    }\n    this.io.on(event, message => callback(message));\n    return () => this.io.off(event);\n  }\n}","map":{"version":3,"names":["socket","Socket","constructor","baseURL","getAccessToken","io","auth","cb","token","on","error","console","log","message","onSync","event","callback","connected","connect","off"],"sources":["/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/network/socket.js"],"sourcesContent":["import socket from 'socket.io-client';\n\nexport default class Socket {\n  constructor(baseURL, getAccessToken) {\n    this.io = socket(baseURL, {\n      auth: (cb) => cb({ token: getAccessToken() }),\n    });\n\n    this.io.on('connect_error', (error) => {\n      console.log('socket error', error.message);\n    });\n  }\n\n  onSync(event, callback) {\n    if (!this.io.connected) {\n      this.io.connect();\n    }\n\n    this.io.on(event, (message) => callback(message));\n    return () => this.io.off(event);\n  }\n}\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,kBAAkB;AAErC,eAAe,MAAMC,MAAM,CAAC;EAC1BC,WAAWA,CAACC,OAAO,EAAEC,cAAc,EAAE;IACnC,IAAI,CAACC,EAAE,GAAGL,MAAM,CAACG,OAAO,EAAE;MACxBG,IAAI,EAAGC,EAAE,IAAKA,EAAE,CAAC;QAAEC,KAAK,EAAEJ,cAAc,CAAC;MAAE,CAAC;IAC9C,CAAC,CAAC;IAEF,IAAI,CAACC,EAAE,CAACI,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;MACrCC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,KAAK,CAACG,OAAO,CAAC;IAC5C,CAAC,CAAC;EACJ;EAEAC,MAAMA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACtB,IAAI,CAAC,IAAI,CAACX,EAAE,CAACY,SAAS,EAAE;MACtB,IAAI,CAACZ,EAAE,CAACa,OAAO,CAAC,CAAC;IACnB;IAEA,IAAI,CAACb,EAAE,CAACI,EAAE,CAACM,KAAK,EAAGF,OAAO,IAAKG,QAAQ,CAACH,OAAO,CAAC,CAAC;IACjD,OAAO,MAAM,IAAI,CAACR,EAAE,CAACc,GAAG,CAACJ,KAAK,CAAC;EACjC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
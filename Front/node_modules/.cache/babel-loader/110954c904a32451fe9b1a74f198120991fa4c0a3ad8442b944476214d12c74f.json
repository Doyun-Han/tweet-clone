{"ast":null,"code":"var _jsxFileName = \"/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/components/Tweets.jsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Banner from './Banner';\nimport NewTweetForm from './NewTweetForm';\nimport TweetCard from './TweetCard';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Tweets = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(({\n  tweetService,\n  username,\n  addable\n}) => {\n  _s();\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const {\n    user\n  } = useAuth();\n  useEffect(() => {\n    tweetService.getTweets(username).then(tweets => setTweets([...tweets])).catch(onError);\n    const stopSync = tweetService.onSync(tweet => onCreated(tweet));\n    return () => stopSync();\n  }, [tweetService, username, user]);\n  const onCreated = tweet => {\n    setTweets(tweets => [tweet, ...tweets]);\n  };\n  const onDelete = tweetId => tweetService.deleteTweet(tweetId).then(() => setTweets(tweets => tweets.filter(tweet => tweet.id !== tweetId))).catch(error => setError(error.toString()));\n  const onUpdate = (tweetId, text) => tweetService.updateTweet(tweetId, text).then(updated => setTweets(tweets => tweets.map(item => item.id === updated.id ? updated : item))).catch(error => error.toString());\n  const onUsernameClick = tweet => history.push(`/${tweet.username}`);\n  const onError = error => {\n    setError(error.toString());\n    setTimeout(() => {\n      setError('');\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [addable && /*#__PURE__*/_jsxDEV(NewTweetForm, {\n      tweetService: tweetService,\n      onError: onError,\n      onCreated: onCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Banner, {\n      text: error,\n      isAlert: true,\n      transient: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), tweets.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tweets-empty\",\n      children: \"No Tweets Yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets\",\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(TweetCard, {\n        tweet: tweet,\n        owner: tweet.username === user.username,\n        onDelete: onDelete,\n        onUpdate: onUpdate,\n        onUsernameClick: onUsernameClick\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}, \"E9YcZYjR0TGX4AVylP/JikZJs2Q=\", false, function () {\n  return [useHistory, useAuth];\n})), \"E9YcZYjR0TGX4AVylP/JikZJs2Q=\", false, function () {\n  return [useHistory, useAuth];\n});\n_c2 = Tweets;\nexport default Tweets;\nvar _c, _c2;\n$RefreshReg$(_c, \"Tweets$memo\");\n$RefreshReg$(_c2, \"Tweets\");","map":{"version":3,"names":["React","memo","useEffect","useState","useHistory","Banner","NewTweetForm","TweetCard","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","Tweets","_s","_c","tweetService","username","addable","tweets","setTweets","error","setError","history","user","getTweets","then","catch","onError","stopSync","onSync","tweet","onCreated","onDelete","tweetId","deleteTweet","filter","id","toString","onUpdate","text","updateTweet","updated","map","item","onUsernameClick","push","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","isAlert","transient","length","className","owner","_c2","$RefreshReg$"],"sources":["/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/components/Tweets.jsx"],"sourcesContent":["import React, { memo, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Banner from './Banner';\nimport NewTweetForm from './NewTweetForm';\nimport TweetCard from './TweetCard';\nimport { useAuth } from '../context/AuthContext';\n\nconst Tweets = memo(({ tweetService, username, addable }) => {\n  const [tweets, setTweets] = useState([]);\n  const [error, setError] = useState('');\n  const history = useHistory();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    tweetService\n      .getTweets(username)\n      .then((tweets) => setTweets([...tweets]))\n      .catch(onError);\n\n    const stopSync = tweetService.onSync((tweet) => onCreated(tweet));\n    return () => stopSync();\n  }, [tweetService, username, user]);\n\n  const onCreated = (tweet) => {\n    setTweets((tweets) => [tweet, ...tweets]);\n  };\n\n  const onDelete = (tweetId) =>\n    tweetService\n      .deleteTweet(tweetId)\n      .then(() =>\n        setTweets((tweets) => tweets.filter((tweet) => tweet.id !== tweetId))\n      )\n      .catch((error) => setError(error.toString()));\n\n  const onUpdate = (tweetId, text) =>\n    tweetService\n      .updateTweet(tweetId, text)\n      .then((updated) =>\n        setTweets((tweets) =>\n          tweets.map((item) => (item.id === updated.id ? updated : item))\n        )\n      )\n      .catch((error) => error.toString());\n\n  const onUsernameClick = (tweet) => history.push(`/${tweet.username}`);\n\n  const onError = (error) => {\n    setError(error.toString());\n    setTimeout(() => {\n      setError('');\n    }, 3000);\n  };\n\n  return (\n    <>\n      {addable && (\n        <NewTweetForm\n          tweetService={tweetService}\n          onError={onError}\n          onCreated={onCreated}\n        />\n      )}\n      {error && <Banner text={error} isAlert={true} transient={true} />}\n      {tweets.length === 0 && <p className=\"tweets-empty\">No Tweets Yet</p>}\n      <ul className=\"tweets\">\n        {tweets.map((tweet) => (\n          <TweetCard\n            key={tweet.id}\n            tweet={tweet}\n            owner={tweet.username === user.username}\n            onDelete={onDelete}\n            onUpdate={onUpdate}\n            onUsernameClick={onUsernameClick}\n          />\n        ))}\n      </ul>\n    </>\n  );\n});\nexport default Tweets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
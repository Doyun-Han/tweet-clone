{"ast":null,"code":"export default class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  async signup(username, password, name, email, url) {\n    return await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url\n      })\n    });\n  }\n  async login(username, password) {\n    return await this.http.fetch('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n  }\n  async me() {\n    return this.http.fetch('/auth/me', {\n      method: 'GET'\n    });\n  }\n  async logout() {\n    return this.http.fetch('/auth/logout', {\n      method: 'POST'\n    });\n  }\n  async csrfToken() {\n    const res = await this.http.fetch('/auth/csrf-token', {\n      method: 'GET'\n    });\n    console.log(res);\n    return res.csrfToken;\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","signup","username","password","name","email","url","fetch","method","body","JSON","stringify","login","me","logout","csrfToken","res","console","log"],"sources":["/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/service/auth.js"],"sourcesContent":["export default class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  async signup(username, password, name, email, url) {\n    return await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url,\n      }),\n    });\n  }\n  async login(username, password) {\n    return await this.http.fetch('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n  }\n\n  async me() {\n    return this.http.fetch('/auth/me', {\n      method: 'GET',\n    });\n  }\n\n  async logout() {\n    return this.http.fetch('/auth/logout', {\n      method: 'POST',\n    });\n  }\n\n  async csrfToken() {\n    const res = await this.http.fetch('/auth/csrf-token', {\n      method: 'GET',\n    });\n    console.log(res);\n    return res.csrfToken;\n  }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,WAAW,CAAC;EAC/BC,WAAWA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACA,IAAI,GAAGA,IAAI;EAClB;EACA,MAAMC,MAAMA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;IACjD,OAAO,MAAM,IAAI,CAACN,IAAI,CAACO,KAAK,CAAC,cAAc,EAAE;MAC3CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBT,QAAQ;QACRC,QAAQ;QACRC,IAAI;QACJC,KAAK;QACLC;MACF,CAAC;IACH,CAAC,CAAC;EACJ;EACA,MAAMM,KAAKA,CAACV,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,OAAO,MAAM,IAAI,CAACH,IAAI,CAACO,KAAK,CAAC,aAAa,EAAE;MAC1CC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBT,QAAQ;QACRC;MACF,CAAC;IACH,CAAC,CAAC;EACJ;EAEA,MAAMU,EAAEA,CAAA,EAAG;IACT,OAAO,IAAI,CAACb,IAAI,CAACO,KAAK,CAAC,UAAU,EAAE;MACjCC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,MAAMM,MAAMA,CAAA,EAAG;IACb,OAAO,IAAI,CAACd,IAAI,CAACO,KAAK,CAAC,cAAc,EAAE;MACrCC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,MAAMO,SAASA,CAAA,EAAG;IAChB,MAAMC,GAAG,GAAG,MAAM,IAAI,CAAChB,IAAI,CAACO,KAAK,CAAC,kBAAkB,EAAE;MACpDC,MAAM,EAAE;IACV,CAAC,CAAC;IACFS,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAOA,GAAG,CAACD,SAAS;EACtB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
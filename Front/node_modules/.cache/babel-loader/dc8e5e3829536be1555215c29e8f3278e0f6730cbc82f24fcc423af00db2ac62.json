{"ast":null,"code":"export default class TweetService {\n  constructor(http, tokenStorage, socket) {\n    this.http = http;\n    this.socket = socket;\n  }\n  async getTweets(username) {\n    const query = username ? `?username=${username}` : '';\n    return this.http.fetch(`/tweets${query}`, {\n      method: 'GET'\n    });\n  }\n  async postTweet(text) {\n    return this.http.fetch('/tweets', {\n      method: 'POST',\n      body: JSON.stringify({\n        text,\n        username: 'doyun',\n        name: 'doyun'\n      })\n    });\n  }\n  async deleteTweet(tweetId) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'DELETE'\n    });\n  }\n  async updateTweet(tweetId, text) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        text\n      })\n    });\n  }\n  onSync(callback) {\n    return this.socket.onSync('tweets', callback);\n  }\n}","map":{"version":3,"names":["TweetService","constructor","http","tokenStorage","socket","getTweets","username","query","fetch","method","postTweet","text","body","JSON","stringify","name","deleteTweet","tweetId","updateTweet","onSync","callback"],"sources":["/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/service/tweet.js"],"sourcesContent":["export default class TweetService {\n  constructor(http, tokenStorage, socket) {\n    this.http = http;\n    this.socket = socket;\n  }\n\n  async getTweets(username) {\n    const query = username ? `?username=${username}` : '';\n    return this.http.fetch(`/tweets${query}`, {\n      method: 'GET',\n    });\n  }\n\n  async postTweet(text) {\n    return this.http.fetch('/tweets', {\n      method: 'POST',\n      body: JSON.stringify({ text, username: 'doyun', name: 'doyun' }),\n    });\n  }\n\n  async deleteTweet(tweetId) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'DELETE',\n    });\n  }\n\n  async updateTweet(tweetId, text) {\n    return this.http.fetch(`/tweets/${tweetId}`, {\n      method: 'PUT',\n      body: JSON.stringify({ text }),\n    });\n  }\n\n  onSync(callback) {\n    return this.socket.onSync('tweets', callback);\n  }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,YAAY,CAAC;EAChCC,WAAWA,CAACC,IAAI,EAAEC,YAAY,EAAEC,MAAM,EAAE;IACtC,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,MAAM,GAAGA,MAAM;EACtB;EAEA,MAAMC,SAASA,CAACC,QAAQ,EAAE;IACxB,MAAMC,KAAK,GAAGD,QAAQ,GAAI,aAAYA,QAAS,EAAC,GAAG,EAAE;IACrD,OAAO,IAAI,CAACJ,IAAI,CAACM,KAAK,CAAE,UAASD,KAAM,EAAC,EAAE;MACxCE,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,MAAMC,SAASA,CAACC,IAAI,EAAE;IACpB,OAAO,IAAI,CAACT,IAAI,CAACM,KAAK,CAAC,SAAS,EAAE;MAChCC,MAAM,EAAE,MAAM;MACdG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEH,IAAI;QAAEL,QAAQ,EAAE,OAAO;QAAES,IAAI,EAAE;MAAQ,CAAC;IACjE,CAAC,CAAC;EACJ;EAEA,MAAMC,WAAWA,CAACC,OAAO,EAAE;IACzB,OAAO,IAAI,CAACf,IAAI,CAACM,KAAK,CAAE,WAAUS,OAAQ,EAAC,EAAE;MAC3CR,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EAEA,MAAMS,WAAWA,CAACD,OAAO,EAAEN,IAAI,EAAE;IAC/B,OAAO,IAAI,CAACT,IAAI,CAACM,KAAK,CAAE,WAAUS,OAAQ,EAAC,EAAE;MAC3CR,MAAM,EAAE,KAAK;MACbG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEH;MAAK,CAAC;IAC/B,CAAC,CAAC;EACJ;EAEAQ,MAAMA,CAACC,QAAQ,EAAE;IACf,OAAO,IAAI,CAAChB,MAAM,CAACe,MAAM,CAAC,QAAQ,EAAEC,QAAQ,CAAC;EAC/C;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}
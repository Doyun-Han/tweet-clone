{"ast":null,"code":"export default class AuthService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n  async signup(username, password, name, email, url) {\n    const data = await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url\n      })\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n  async login(username, password) {\n    const data = await this.http.fetch('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n  async me() {\n    const token = this.tokenStorage.getToken();\n    return this.http.fetch('/auth/me', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}","map":{"version":3,"names":["AuthService","constructor","http","tokenStorage","signup","username","password","name","email","url","data","fetch","method","body","JSON","stringify","saveToken","token","login","me","getToken","headers","Authorization","logout","clearToken"],"sources":["/Users/handoyun/Desktop/Code/Project/Dwitter/Front/src/service/auth.js"],"sourcesContent":["export default class AuthService {\n  constructor(http, tokenStorage) {\n    this.http = http;\n    this.tokenStorage = tokenStorage;\n  }\n  async signup(username, password, name, email, url) {\n    const data = await this.http.fetch('/auth/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n        name,\n        email,\n        url,\n      }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n  async login(username, password) {\n    const data = await this.http.fetch('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password,\n      }),\n    });\n    this.tokenStorage.saveToken(data.token);\n    return data;\n  }\n\n  async me() {\n    const token = this.tokenStorage.getToken();\n    return this.http.fetch('/auth/me', {\n      method: 'GET',\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  async logout() {\n    this.tokenStorage.clearToken();\n  }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,WAAW,CAAC;EAC/BC,WAAWA,CAACC,IAAI,EAAEC,YAAY,EAAE;IAC9B,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;EAClC;EACA,MAAMC,MAAMA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAE;IACjD,MAAMC,IAAI,GAAG,MAAM,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC,cAAc,EAAE;MACjDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBV,QAAQ;QACRC,QAAQ;QACRC,IAAI;QACJC,KAAK;QACLC;MACF,CAAC;IACH,CAAC,CAAC;IACF,IAAI,CAACN,YAAY,CAACa,SAAS,CAACN,IAAI,CAACO,KAAK,CAAC;IACvC,OAAOP,IAAI;EACb;EACA,MAAMQ,KAAKA,CAACb,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,MAAMI,IAAI,GAAG,MAAM,IAAI,CAACR,IAAI,CAACS,KAAK,CAAC,aAAa,EAAE;MAChDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBV,QAAQ;QACRC;MACF,CAAC;IACH,CAAC,CAAC;IACF,IAAI,CAACH,YAAY,CAACa,SAAS,CAACN,IAAI,CAACO,KAAK,CAAC;IACvC,OAAOP,IAAI;EACb;EAEA,MAAMS,EAAEA,CAAA,EAAG;IACT,MAAMF,KAAK,GAAG,IAAI,CAACd,YAAY,CAACiB,QAAQ,CAAC,CAAC;IAC1C,OAAO,IAAI,CAAClB,IAAI,CAACS,KAAK,CAAC,UAAU,EAAE;MACjCC,MAAM,EAAE,KAAK;MACbS,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASL,KAAM;MAAE;IAC9C,CAAC,CAAC;EACJ;EAEA,MAAMM,MAAMA,CAAA,EAAG;IACb,IAAI,CAACpB,YAAY,CAACqB,UAAU,CAAC,CAAC;EAChC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}